import sys
import requests
import urllib3
import certifi
import sys
from sys import __stdout__, stdout
import os
import subprocess


def checkHSTS(domain):
    http = urllib3.PoolManager(
        cert_reqs='CERT_REQUIRED',  # Force certificate check.
        ca_certs=certifi.where(),  # Path to the Certifi bundle.
    )
    site = domain
    urlstart = "https://"
    url = ''

    os.system('clear')
    p = './output/hsts'
    try:
        os.mkdir(p)
    except FileExistsError as exc:
        print(exc)

    try:
        subprocess.run('rm -rf output/wayback/results.json',
                       shell=True, stdout=PIPE)
    except:
        pass
    # check if url in argument begins https if not, inject it
    if site.startswith(urlstart):
        url = site
    else:
        url = urlstart + site

    # Peform the HSTS check and display the result
    try:
        check = http.request('GET', url, headers={
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1'})
        response = check.headers
        if 'strict-transport-security' in response:
            print("yes")
            output = site + ': is using HSTS'
            try:
                with open('output/hsts/result.txt', 'w+') as f:
                    f.write(output)
                    return True
            except:
                return False
        else:
            print("no")
            output = site + ': is NOT using HSTS'
            try:
                with open('output/hsts/result.txt', 'w+') as f:
                    f.write(output)
                    return True
            except:
                return False
    except:
        return False
