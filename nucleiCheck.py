try:
    import time
    from sys import __stdout__, stdout
    from threading import Thread
    from subprocess import *
    import os
    import sys
    import subprocess
    import threading
    import readline
    from termcolor import colored
except ImportError:
    print("\ncheck for prerequisities ")


def nuclei_check(target):
    os.system('clear')
    p = './output/nuclei/'
    try:
        os.mkdir(p)

    except FileExistsError as exc:
        print(exc)
    print(colored("\n--------------------------------------------",
                  'red', attrs=['bold']))
    print(
        colored("[+] Starting Nuclei", 'red', attrs=['bold']))
    print(colored("--------------------------------------------",
                  'red', attrs=['bold']))
    print(colored("\n[*]\tRunning Nuclei scans\n[*]", 'red', attrs=['bold']))
    cmd = [
        'nuclei -ut',
        'nuclei -u ' + target +
        ' -silent -t ~/nuclei-templates/ -severity info -o  output/nuclei/info.txt',
        'nuclei -u ' + target +
        ' -silent -t ~/nuclei-templates/ -severity low -o  output/nuclei/low.txt',
        'nuclei -u ' + target +
        ' -silent -t ~/nuclei-templates/ -severity medium -o  output/nuclei/medium.txt',
        'nuclei -u ' + target +
        ' -silent -t ~/nuclei-templates/ -severity high -o  output/nuclei/high.txt',
        'nuclei -u ' + target +
        ' -silent -t ~/nuclei-templates/ -severity critical -o  output/nuclei/critical.txt'
    ]

    try:
        for c in cmd:
            print(c)
            proc = subprocess.run(c, shell=True, stderr=STDOUT, stdout=PIPE)
        if(proc.returncode != 0):
            print(colored('Step 1 Failed! Check/Update prerequisitie packages. \nError: ',
                          'blue', attrs=['bold']) + proc.stderr.rstrip())
            return False
        else:
            return True
    except:
        return False
