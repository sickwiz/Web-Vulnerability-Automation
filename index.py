from flask import Flask, render_template, request, make_response, jsonify
import pdfkit
import os
import wayback
from wayback import waybackMachine
import s3buckets
from s3buckets import bucketfinder
import clickjack
from clickjack import checkClick
import hsts
from hsts import checkHSTS
import subdomain
from subdomain import findDomain
import portscan
from portscan import portscanner
import emailspoof
from emailspoof import emailspoof_ZT
import testSSL
from testSSL import testssl
import googleDork
from googleDork import dorks
import gitDork
from gitDork import githubDorker
import cms
from cms import cms_scan
import cors
from cors import cors_scan
import nucleiCheck
from nucleiCheck import nuclei_check
import serverInfo
from serverInfo import checkServer
import dirListing
from dirListing import scanDirectory
import xss
from xss import scanXSS
import sql
from sql import checkSqli
app = Flask(__name__)


@app.route('/')
def home():
    return render_template("index.html")


@app.route('/active', methods=["POST"])
def active():
    response = {}
    response['success'] = True
    data = request.get_json()
    domain = data['domain']

    # dirb
    if(data['dirb']):
        res = scanDirectory(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    # portscanner
    if(data['port']):
        res = portscanner(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    # subdomain enumeration
    if(data['subd']):
        res = findDomain(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    # check SSL
    if(data['ssl']):
        res = testssl(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    if(data['cms']):
        res = cms_scan(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    if(data['cms']):
        res = cms_scan(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    # cors check
    if(data['cors']):
        res = cors_scan(domain)
        if(res == False):
            response['success'] = False
            return jsonify(response)

    return jsonify(response)


@app.route('/passive')
def passive():
    return render_template("passive.html")

# wayback


@app.route('/wayback', methods=["GET", "POST"])
def wayBack():
    import wayback
    from wayback import waybackMachine
    domain = request.form['domain']
    res = waybackMachine(domain)
    return render_template("wayback.html", pO=res)


@app.route('/s3', methods=["GET", "POST"])
def s3():
    import s3buckets
    from s3buckets import bucketfinder
    url = request.form['company']
    result = bucketfinder(url)
    return render_template("s3.html", le=len(result), ur=url, bucket=result)


@app.route('/click', methods=["POST"])
def jacking():
    import clickjack
    from clickjack import checkClick
    domain = request.form['domain']
    res = checkClick(domain)
    return render_template("clickjack.html", pO=res)


@app.route('/hsts', methods=["POST"])
def hsts():
    import hsts
    from hsts import checkHSTS
    domain = request.form['domain']
    res = checkHSTS(domain)
    return render_template("clickjack.html", pO=res)


@app.route('/subdomain', methods=["POST"])
def subs():
    import subdomain
    from subdomain import findDomain
    domain = request.form['domain']
    res = findDomain(domain)
    return render_template("subdomain.html", le=len(res), subs=res)


@app.route('/ports', methods=["POST"])
def ports():
    import portscan
    from portscan import portscanner
    domain = request.form['domain']
    res = portscanner(domain)
    return render_template("ports.html", le=len(res), ip=res[0], result=res[1])
    # return render_template("ports.html", domain=domain)


@app.route('/emailSpoof', methods=["POST"])
def email():
    import emailspoof
    from emailspoof import emailspoof_ZT
    domain = request.form['domain']
    res = emailspoof_ZT(domain)
    return res


@app.route('/testSSL', methods=["POST"])
def testSSL():
    import testSSL
    from testSSL import testssl
    domain = request.form['domain']
    res = testssl(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/googleDork', methods=["POST"])
def googleDork():
    import googleDork
    from googleDork import dorks
    domain = request.form['domain']
    res = dorks(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/gitDork', methods=["POST"])
def gitDork():
    import gitDork
    from gitDork import githubDorker
    domain = request.form['domain']
    res = githubDorker(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/cms', methods=["POST"])
def cms():
    import cms
    from cms import cms_scan
    domain = request.form['domain']
    res = cms_scan(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/cors', methods=["POST"])
def cors():
    import cors
    from cors import cors_scan
    domain = request.form['domain']
    res = cors_scan(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/nucli', methods=["POST"])
def nucli():
    import nucleiCheck
    from nucleiCheck import nuclei_check
    domain = request.form['domain']
    res = nuclei_check(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/serverCheck', methods=["POST"])
def serverCheck():
    import serverInfo
    from serverInfo import checkServer
    domain = request.form['domain']
    res = checkServer(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/dirb', methods=["POST"])
def dirb():
    import dirListing
    from dirListing import scanDirectory
    domain = request.form['domain']
    res = scanDirectory(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/xss', methods=["POST"])
def XSS():
    import xss
    from xss import scanXSS
    domain = request.form['domain']
    res = scanXSS(domain)
    return render_template('clickjack.html', pO=res)


@app.route('/sql', methods=["POST"])
def sqli():
    import sql
    from sql import checkSqli
    domain = request.form['domain']
    res = checkSqli(domain)
    return render_template('clickjack.html', pO=res)


app.run(debug=True)
